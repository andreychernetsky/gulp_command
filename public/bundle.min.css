@import url("https://fonts.googleapis.com/css?family=Roboto");
html {
  font-size: 100%; }

.wrap {
  margin: 0 auto;
  padding: 0;
  margin: 0;
  background-color: #ddd;
  font-family: "Roboto", sans-serif, "Open Sans", sans-serif;
  line-height: 1.5; }

h1, h2, h3, h4, h5, h6, p {
  padding: 0;
  margin: 0; }

a {
  text-decoration: none; }

.view-port {
  width: 1200px; }

.wrap-site {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  min-width: 320px;
  margin: 0 auto;
  box-shadow: 0 2px 5px #555;
  overflow: hidden;
  background-color: #fff; }

.one-news {
  max-width: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center; }

span {
  color: #f85f40; }

.wto-news {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  max-width: 100%; }

.auth {
  width: 100%;
  background: #000; }
  .auth__list {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    height: 100px; }
  .auth__item {
    padding: 0;
    margin: 0;
    list-style: none; }
  .auth__link {
    display: block;
    text-transform: uppercase;
    color: #ffffff;
    font-weight: bold; }
    .auth__link:hover {
      color: #ddd; }

.blockquote-one {
  margin: 10px 10px 10px 10px;
  background-color: #ddd;
  color: #474C4F;
  padding: 50px;
  position: relative;
  text-align: center;
  text-transform: uppercase;
  font-family: "Roboto", sans-serif, "Open Sans", sans-serif "Lato", sans-serif; }
  .blockquote-one:before {
    content: "\f10d";
    font-family: FontAwesome;
    position: absolute;
    z-index: 40;
    left: 50%;
    transform: translateX(-50%);
    top: 14px;
    color: #474C4F;
    font-size: 20px;
    background: #FFF4E0;
    padding: 0 15px; }
  .blockquote-one:after {
    content: "";
    position: absolute;
    left: 15px;
    top: 20px;
    right: 15px;
    height: 4px;
    border-top: 1px dotted #474C4F;
    border-bottom: 1px dotted #474C4F; }
  .blockquote-one__text {
    font-size: 20px;
    letter-spacing: .05em;
    line-height: 1.4;
    text-align: center; }
  .blockquote-one__site {
    font-style: normal;
    font-weight: 300; }

.contacts__phone {
  font-weight: 700;
  font-size: 1.5625rem;
  color: #000; }

.footer {
  max-width: 100%;
  background-color: #000;
  color: #fff;
  padding-bottom: 20px; }
  .footer__header {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    padding: 30px 0;
    border-bottom: 2px solid #fff; }
  .footer__brand {
    font-size: 1.3rem;
    font-weight: bold;
    left: 40px; }
  .footer__nav {
    padding: 0;
    margin: 0;
    list-style: none;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around; }
    .footer__nav .nav__item {
      margin: 0 10px;
      font-size: 1.3rem; }
    .footer__nav .nav__link {
      text-transform: uppercase;
      color: #fff;
      transition: .3s all; }
      .footer__nav .nav__link:hover {
        color: #fff;
        font-size: 1.2rem; }
  .footer__content {
    display: -ms-flexbox;
    display: flex;
    padding: 20px 0;
    line-height: 1.7;
    font-size: 1.2rem; }
  .footer__block {
    max-width: 100%;
    width: 50%;
    padding: 20px; }
  .footer__map {
    display: -ms-flexbox;
    display: flex;
    padding: 0 30px;
    border-right: 1px solid #fff;
    border-left: 1px solid #fff; }
  .footer__list {
    padding: 0;
    margin: 0;
    list-style: none;
    width: 50%;
    font-size: 1.2rem; }
    .footer__list .list__item {
      padding: 5px; }
      .footer__list .list__item:hover {
        color: #fff; }
        .footer__list .list__item:hover .list__link {
          color: #fff;
          margin-left: 10px; }
    .footer__list .list__link {
      margin-left: 5px;
      color: #fff;
      transition: .3s margin-left; }

/*
@import "../partials/params";
@import "../partials/mixins";

.top-menu--hidden-menu {
    display: none;
    background-color: rgba(0, 0, 0, 0.8);
    width: 100%;
    height: 100%;
    position: fixed;
    z-index: 101;
    top: 0;
    left: 0;

    &__list {
        margin: 0;
        padding: 0;
        text-align: center;
        height: 100%;
        display: flex;
        flex-flow: column nowrap;
        justify-content: center;
        align-items: stretch;
        align-content: stretch;
    }
    &__link {
        display: inline-block;
        margin: 20px auto;
        color: #fff;
    }
}

*/

.line {
  width: 95%;
  background-color: #ddd;
  height: 1px;
  margin: auto; }

.logo-top {
  display: -ms-flexbox;
  display: flex; }
  .logo-top__title, .logo-top__dot {
    color: #fff;
    font-family: 'Eurofurence';
    font-weight: normal;
    font-size: 2.5rem; }
  .logo-top__dot {
    color: #58c93a; }

.m-news {
  max-width: 100%;
  background-color: rgba(255, 255, 255, 0.9);
  background: #fff;
  height: 600px; }
  .m-news__content {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center;
    padding: 60px; }
  .m-news__title {
    font-weight: bold;
    font-size: 1.8rem;
    margin-bottom: 25px;
    opacity: .8; }

.main-header {
  max-width: 100%;
  margin-bottom: 30px;
  background-color: #292929;
  width: 100%;
  height: 100px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  display: -moz-flex;
  display: -ms-flex;
  display: -o-flex;
  position: relative; }
  .main-header__line {
    position: absolute;
    bottom: 0;
    height: 5px;
    width: 100%;
    background-color: #000;
    z-index: 1; }

.main-menu {
  width: 100%;
  padding: 0;
  margin: 0;
  list-style: none;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  display: -moz-flex;
  display: -ms-flex;
  display: -o-flex;
  width: 560px;
  text-align: center;
  height: 100%; }
  .main-menu__item {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    width: 25%;
    border-left: solid 1px #fff;
    border-bottom: 5px solid #000;
    font-weight: bold;
    height: 100%; }
    .main-menu__item:hover {
      border-bottom: 5px solid #555555;
      z-index: 2; }
    .main-menu__item:last-child {
      border-right: solid 1px #fff; }
    .main-menu__item:first-child {
      border-bottom: 5px solid #555555;
      z-index: 2; }
  .main-menu__link {
    font-size: 1.3rem;
    color: #fff; }
    .main-menu__link:last-child {
      color: #777777; }
    .main-menu__link:hover {
      text-decoration: none;
      outline: 0;
      color: #fff; }
      .main-menu__link:hover:active, .main-menu__link:hover:focus, .main-menu__link:hover:hover {
        color: #ddd;
        text-decoration: none;
        outline: 0; }

/*==========  Desktop First  ==========*/
/* Large Devices, Wide Screens */
/* Medium Devices, Desktops */
@media only screen and (max-width: 992px) {
  .auth {
    max-width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center; }
    .auth__link {
      margin: 0 20px;
      display: block;
      font-size: 0.9rem;
      font-weight: normal; } }

/* Small Devices, Tablets */
@media only screen and (max-width: 768px) {
  .wrap-site {
    max-width: 100%;
    margin: 20px auto; }
  .main-header {
    margin-top: 0;
    height: 85px;
    z-index: 20; }
  .main-menu {
    display: none; }
  .menu-btn {
    display: block; }
  .blockquote-one__text {
    font-size: 1rem;
    margin-top: 5%;
    text-align: center; }
  .auth {
    max-width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center; }
    .auth__link {
      margin: 0 20px;
      display: block;
      font-size: 0.9rem;
      font-weight: normal; }
  .m-news__content {
    max-width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center; }
  .m-news__title {
    font-size: 1.2rem; }
  .footer__content {
    max-width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
  .footer__block {
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
  .footer__text {
    text-align: center; }
  .footer__list {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center; } }

/* Extra Small Devices, Phones */
@media only screen and (max-width: 480px) {
  .nav {
    display: none; } }

/* Custom, iPhone Retina */
/**/

.menu-btn span,
.menu-btn span::before,
.menu-btn span::after {
  position: absolute;
  z-index: 100;
  width: 20px;
  height: 2px;
  background: #777;
  left: 50%;
  top: 50%;
  margin-left: -10px;
  margin-top: -1px; }

.menu-btn span::before,
.menu-btn span::after {
  content: '';
  display: block;
  transition: 0.2s; }

.menu-btn span::before {
  transform: translateY(-5px); }

.menu-btn span::after {
  transform: translateY(5px); }

.menu-btn {
  margin: 15px 10px;
  z-index: 101;
  display: block;
  width: 50px;
  height: 50px;
  background-color: #fff;
  border-radius: 50%;
  position: relative; }

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
/*h1 {*/
/*font-size: 2em;*/
/*margin: 0.67em 0;*/
/*}*/
/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
